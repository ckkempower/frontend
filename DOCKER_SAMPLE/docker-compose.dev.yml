version: '3'

services:
    db:
        image: empowercontainer.azurecr.io/empower/db:latest    
        build:
            context: ./db
            dockerfile: Dockerfile
        environment:
            POSTGRES_USER: postgres
        env_file:
            - globals.env
        volumes:
            - empower_db_data:/var/lib/postgresql/data
        ports:
            - '5432:5432'


    server:
        image: empowercontainer.azurecr.io/empower/server:latest    
        build:
            context: ./server
            dockerfile: Dockerfile.dev
        command: npm run dev
        volumes:
            - ./server/src:/usr/app/src
            - ./server/public:/usr/app/public
            - ./shared:/usr/app/src/shared
            - /usr/app/node_modules
        env_file:
            - ./globals.env
            - ./server/.env
            - ./dev.env
        depends_on:
            - db
        links:
            - db
    web:
        image: empowercontainer.azurecr.io/empower/web:latest    
        build:
            context: ./web
            dockerfile: Dockerfile.dev
        env_file:
            - ./dev.env
        volumes:
            - ./web/src:/usr/app/src
            - ./web/public:/usr/app/src/public
            - /usr/app/node_modules
        depends_on:
            - server
        ports:
            - '3000:3000'

    reverseproxy:
        image: empowercontainer.azurecr.io/empower/reverseproxy:latest
        build:
            context: ./reverseproxy
            dockerfile: Dockerfile
            args:
                NODE_ENV: development
        volumes:
            - ./reverseproxy:/app
            - /app/node_modules
        environment:
            - NODE_ENV=development
            - PORT=80
        command: npm run dev
        restart: always
        depends_on:
            - web
            - server
        links:
            - server
            - web
        ports:
            - '80:80'        

    # reverseproxy:
    #     image: empowercontainer.azurecr.io/empower/reverseproxy:latest
    #     environment:








volumes:
    empower_db_data:
